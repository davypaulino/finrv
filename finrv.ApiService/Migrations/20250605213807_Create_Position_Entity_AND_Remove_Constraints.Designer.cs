// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using finrv.Domain;

#nullable disable

namespace finrv.ApiService.Migrations
{
    [DbContext(typeof(InvestimentDbContext))]
    [Migration("20250605213807_Create_Position_Entity_AND_Remove_Constraints")]
    partial class Create_Position_Entity_AND_Remove_Constraints
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("finrv.Domain.Entities.AssetEntity", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT UNSIGNED")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DATETIME(6)")
                        .HasColumnName("criado_em");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("criado_por");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nome");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("codigo");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("DATETIME(6)")
                        .HasColumnName("atualizado_em");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("atualizado_por");

                    b.HasKey("Id");

                    b.ToTable("ativo", (string)null);
                });

            modelBuilder.Entity("finrv.Domain.Entities.PositionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<ulong>("AssetId")
                        .HasColumnType("BIGINT UNSIGNED")
                        .HasColumnName("ativo_id");

                    b.Property<decimal>("AveragePrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("preco_medio");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DATETIME(6)")
                        .HasColumnName("criado_em");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("criado_por");

                    b.Property<uint>("PositionSize")
                        .HasColumnType("INT UNSIGNED")
                        .HasColumnName("quantidade");

                    b.Property<decimal>("ProfitAndLoss")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("lucro_ou_perda");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("DATETIME(6)")
                        .HasColumnName("atualizado_em");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("atualizado_por");

                    b.Property<Guid>("UserId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("UserId");

                    b.ToTable("posicao", (string)null);
                });

            modelBuilder.Entity("finrv.Domain.Entities.QuotationEntity", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT UNSIGNED")
                        .HasColumnName("id");

                    b.Property<ulong>("AssetId")
                        .HasColumnType("BIGINT UNSIGNED")
                        .HasColumnName("ativo_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DATETIME(6)")
                        .HasColumnName("criado_em");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("criado_por");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("preco_unitario");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("DATETIME(6)")
                        .HasColumnName("atualizado_em");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("atualizado_por");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.ToTable("cotacao", (string)null);
                });

            modelBuilder.Entity("finrv.Domain.Entities.TransactionEntity", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT UNSIGNED")
                        .HasColumnName("id");

                    b.Property<ulong>("AssetId")
                        .HasColumnType("BIGINT UNSIGNED")
                        .HasColumnName("ativo_id");

                    b.Property<decimal>("BrokerageValue")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("corretagem");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DATETIME(6)")
                        .HasColumnName("criado_em");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("criado_por");

                    b.Property<int>("PositionSize")
                        .HasColumnType("integer")
                        .HasColumnName("quantidade");

                    b.Property<sbyte>("Type")
                        .HasColumnType("TINYINT")
                        .HasColumnName("tipo_operacao");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("preco_unitario");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("DATETIME(6)")
                        .HasColumnName("atualizado_em");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("atualizado_por");

                    b.Property<Guid>("UserId")
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("UserId");

                    b.ToTable("operacoes", (string)null);
                });

            modelBuilder.Entity("finrv.Domain.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<decimal>("BrokeragePercent")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("porcentagem_corretagem");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DATETIME(6)")
                        .HasColumnName("criado_em");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("criado_por");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("DATETIME(6)")
                        .HasColumnName("atualizado_em");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("atualizado_por");

                    b.HasKey("Id");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("finrv.Domain.Entities.PositionEntity", b =>
                {
                    b.HasOne("finrv.Domain.Entities.AssetEntity", "Asset")
                        .WithMany("Positions")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("finrv.Domain.Entities.UserEntity", "User")
                        .WithMany("Positions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("User");
                });

            modelBuilder.Entity("finrv.Domain.Entities.QuotationEntity", b =>
                {
                    b.HasOne("finrv.Domain.Entities.AssetEntity", "Asset")
                        .WithMany("Quotations")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("finrv.Domain.Entities.TransactionEntity", b =>
                {
                    b.HasOne("finrv.Domain.Entities.AssetEntity", "Asset")
                        .WithMany("Transactions")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("finrv.Domain.Entities.UserEntity", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("User");
                });

            modelBuilder.Entity("finrv.Domain.Entities.AssetEntity", b =>
                {
                    b.Navigation("Positions");

                    b.Navigation("Quotations");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("finrv.Domain.Entities.UserEntity", b =>
                {
                    b.Navigation("Positions");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
