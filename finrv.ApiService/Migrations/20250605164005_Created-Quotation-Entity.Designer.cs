// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using finrv.Domain;

#nullable disable

namespace finrv.ApiService.Migrations
{
    [DbContext(typeof(InvestimentDbContext))]
    [Migration("20250605164005_Created-Quotation-Entity")]
    partial class CreatedQuotationEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("finrv.Domain.Entities.AssetEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("serial");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DATETIME(6)")
                        .HasColumnName("criado_em");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("criado_por");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nome");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("codigo");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("DATETIME(6)")
                        .HasColumnName("atualizado_em");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("atualizado_por");

                    b.HasKey("Id");

                    b.ToTable("ativo", (string)null);
                });

            modelBuilder.Entity("finrv.Domain.Entities.QuotationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<ulong>("AssetId")
                        .HasColumnType("BIGINT UNSIGNED")
                        .HasColumnName("ativo_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DATETIME(6)")
                        .HasColumnName("criado_em");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("criado_por");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("preco_unitario");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("DATETIME(6)")
                        .HasColumnName("atualizado_em");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("atualizado_por");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.ToTable("cotacao", (string)null);
                });

            modelBuilder.Entity("finrv.Domain.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("CHAR(36)")
                        .HasColumnName("id");

                    b.Property<decimal>("BrokeragePercent")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("porcentagem_corretagem");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("DATETIME(6)")
                        .HasColumnName("criado_em");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("criado_por");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("DATETIME(6)")
                        .HasColumnName("atualizado_em");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("atualizado_por");

                    b.HasKey("Id");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("finrv.Domain.Entities.QuotationEntity", b =>
                {
                    b.HasOne("finrv.Domain.Entities.AssetEntity", "Asset")
                        .WithMany("Quotations")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("finrv.Domain.Entities.AssetEntity", b =>
                {
                    b.Navigation("Quotations");
                });
#pragma warning restore 612, 618
        }
    }
}
